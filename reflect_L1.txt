Viewing a diff between two files helps indentifying areas where a new bug may
have been introduced. So check those locations first when things are "suddenly"
broken.

Other notes:
Use git-bash to get linux style command prompt
on windows you have program called FC. Can be runned from commandline:
>>	FC old_file.js new_file.js
>> diff newfile.js old_file.js | for linux


Reflect: Using History for Efficiency

Now that you've learned about some version control systems, and how they can help you save the history of a file, go add the following question and your thoughts on it to your reflections file:

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Reflect: Manual Commits
By committing manually instead of automaticall, you can decide what to commit and when.
This gives the opportunity to split the commits based on functionality. 
By committing manually you can specify commit messages describing what has changed, instead of only showing an auto commit.

Reflect: Confidence from Version Control

How might using version control make you more confident to make changes that could break something?

Reflect: How Do You Want to Use Git?
-I want to use git for tracking projects versions, prepare software documentation.

Reflect: Multi-File commits
Multi-file commits are usefull when files are related to eachother.
"Normal" documents seldom have relations, so those are not needed. In sourcecode, files will have lots of relations.
So having multi-file commits is an essential feature.

Reflect: what do you want to try using Git for?
Source code for a simple website/game

Commands:

q |    exit git log!
git log  |    List the commits and show which files have changed
git log --stat  |    Show addition information about the commits
git diff id1 id2  |    Compare two commits
git clone  |    Create a local copy/clone from the repository
git config --global color.ui auto |    get colored diff output
git checkout  |    Shows a previous version of the file. This is not a checkout to edit like in SVN or TFS!
